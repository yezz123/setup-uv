name: default
on:
  pull_request:
  push:

jobs:
  # run linters and unit tests
  lint-and-test-units:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        id: npm-cache
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm install
      - run: npm run format:check
      - run: npm run test

  # run action on a clean machine without building to check that it works as expected
  test-integration:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
        uv-version:
          - "0.1.2"
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
      fail-fast: true

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - uses: ./
        with:
          uv-version: ${{ matrix.uv-version }}
          uv-venv: "my_virt_env"
      - run: uv --version
      - name: Get python executable on Windows
        if: runner.os == 'Windows'
        run: |
          Get-Command python
      - name: Get python executable on non-Windows
        if: runner.os != 'Windows'
        run: |
          which python
      - name: Check inside virtual environment
        run: python -c "import sys; exit(0 if sys.prefix != sys.base_prefix else 1)"